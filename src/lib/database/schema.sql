DROP TABLE IF EXISTS Department;

CREATE TABLE
    IF NOT EXISTS Department (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL UNIQUE,
        slug TEXT GENERATED ALWAYS AS (REPLACE (LOWER(name), ' ', '-')) STORED,
        color TEXT NOT NULL UNIQUE CHECK(length(color) = 7),
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP
    );

CREATE TRIGGER DEPARTMENT_UPDATED_AT AFTER UPDATE ON 
DEPARTMENT FOR EACH ROW BEGIN 
	UPDATE Department
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 

DROP TABLE IF EXISTS Category;

CREATE TABLE
    IF NOT EXISTS Category (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        departmentId INTEGER NOT NULL,
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP,
        FOREIGN KEY(departmentId) REFERENCES Department(id)
    );

CREATE TRIGGER CATEGORY_UPDATED_AT AFTER UPDATE ON 
CATEGORY FOR EACH ROW BEGIN 
	UPDATE Category
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 

DROP TABLE IF EXISTS SubCategory;

CREATE TABLE
    IF NOT EXISTS SubCategory (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        categoryId INTEGER NOT NULL,
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP,
        FOREIGN KEY(categoryId) REFERENCES Category(id)
    );

CREATE TRIGGER SUBCATEGORY_UPDATED_AT AFTER UPDATE 
ON SUBCATEGORY FOR EACH ROW BEGIN 
	UPDATE SubCategory
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 

DROP TABLE IF EXISTS Product;

CREATE TABLE
    IF NOT EXISTS Product (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        description TEXT,
        departmentId INTEGER NOT NULL,
        categoryId INTEGER NOT NULL,
        subCategoryId INTEGER,
        imageId INTEGER,
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP,
        FOREIGN KEY (departmentId) REFERENCES Department(id),
        FOREIGN KEY (categoryId) REFERENCES Category(id),
        FOREIGN KEY (subCategoryId) REFERENCES SubCategory(id),
        FOREIGN KEY (imageId) REFERENCES Image(id)
    );

CREATE TRIGGER PRODUCT_UPDATED_AT AFTER UPDATE ON PRODUCT 
FOR EACH ROW BEGIN 
	UPDATE Product
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 

DROP TABLE IF EXISTS ProductVariant;

CREATE TABLE
    IF NOT EXISTS ProductVariant (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        imageId INTEGER,
        sku TEXT NOT NULL,
        barcode TEXT NOT NULL,
        price REAL NOT NULL,
        purchasePrice REAL NOT NULL,
        cost REAL NOT NULL,
        -- taxes REAL NOT NULL,
        stock INTEGER NOT NULL,
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP,
        FOREIGN KEY (imageId) REFERENCES Image(id)
    );

CREATE TRIGGER PRODUCTVARIANT_UPDATED_AT AFTER UPDATE 
ON PRODUCTVARIANT FOR EACH ROW BEGIN 
	UPDATE ProductVariant
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 

DROP TABLE IF EXISTS Company;

CREATE TABLE
    IF NOT EXISTS Company (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        name TEXT,
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP
    );

CREATE TRIGGER COMPANY_UPDATED_AT AFTER UPDATE ON COMPANY 
FOR EACH ROW BEGIN 
	UPDATE Company
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 

DROP TABLE IF EXISTS User;

CREATE TABLE
    IF NOT EXISTS User (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        firstName TEXT,
        lastName TEXT,
        companyId INTEGER,
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP,
        FOREIGN KEY (companyId) REFERENCES Company(id)
    );

CREATE TRIGGER USER_UPDATED_AT AFTER UPDATE ON USER 
FOR EACH ROW BEGIN 
	UPDATE User
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 

DROP TABLE IF EXISTS ProductsAttribute;

CREATE TABLE
    IF NOT EXISTS ProductsAttribute (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        unitOfMeasure TEXT,
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP
    );

CREATE TRIGGER PRODUCT_ATTRIBUTE_UPDATED_AT AFTER UPDATE 
ON PRODUCTSATTRIBUTE FOR EACH ROW BEGIN 
	UPDATE ProductsAttribute
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 

DROP TABLE IF EXISTS Image;

CREATE TABLE
    IF NOT EXISTS Image (
        id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
        url TEXT NOT NULL,
        width INTEGER NOT NULL,
        height INTEGER NOT NULL,
        description TEXT,
        createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
        updatedAt TIMESTAMP
    );

CREATE TRIGGER IMAGE_UPDATED_AT AFTER UPDATE ON IMAGE 
FOR EACH ROW BEGIN 
	UPDATE Image
	SET
	    updatedAt = CURRENT_TIMESTAMP
	WHERE id = NEW.id;
END; 